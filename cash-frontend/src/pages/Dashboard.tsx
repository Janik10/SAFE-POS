import { useState } from "react";
import {
  startShift,
  endShift,
  createTransaction,
} from "../api/cashierApi";
import { useNavigate } from "react-router-dom";

export default function Dashboard() {
  const [cashierId] = useState<number>(() => {
  const stored = localStorage.getItem("cashierId");

  if (!stored) {
    alert("–ö–∞—Å—Å–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ª–æ–≥–∏–Ω—É.");
    window.location.href = "/";
    return 0;
  }

  const id = parseInt(stored);
  if (isNaN(id)) {
    alert("–ù–µ–≤–µ—Ä–Ω—ã–π cashierId");
    window.location.href = "/";
    return 0;
  }

  return id;
});

const role = localStorage.getItem("role");
if (role !== "cashier") {
  alert("–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω —Ç–æ–ª—å–∫–æ –∫–∞—Å—Å–∏—Ä–∞–º");
  window.location.href = "/";
  return null;
}




  const [shiftId, setShiftId] = useState<number | null>(null);
  const [amount, setAmount] = useState<number>(0);
  const [type, setType] = useState<string>("income");
  const [finalCash, setFinalCash] = useState<number>(0); // üëà –≤–∞–∂–Ω–æ
  const navigate = useNavigate();

  const handleStartShift = async () => {
    console.log("‚û°Ô∏è –ó–∞–ø—É—Å–∫ —Å–º–µ–Ω—ã –¥–ª—è –∫–∞—Å—Å–∏—Ä–∞:", cashierId); // üëà –¥–æ–±–∞–≤—å —ç—Ç–æ
    try {
      const data = await startShift(cashierId);
      console.log("‚úÖ –°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞, ID —Å–º–µ–Ω—ã:", data.id); // üëà –∏ —ç—Ç–æ
      setShiftId(data.id);
      alert("–°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞!");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–º–µ–Ω—ã", error); // üëà –∏ —ç—Ç–æ
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–º–µ–Ω—ã");
    }
 };


  const handleEndShift = async () => {
    if (!shiftId) return alert("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã");
    try {
      await endShift(shiftId, finalCash); // üëà –ø–µ—Ä–µ–¥–∞—ë–º –∏—Ç–æ–≥
      setShiftId(null);
      alert("–°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–º–µ–Ω—ã");
    }
  };

  const handleCreateTransaction = async () => {
    if (!shiftId) return alert("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã");
    try {
      await createTransaction({ type, amount, cashier_id: cashierId, shift_id: shiftId });
      alert("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞");
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏");
    }
  };

  return (
    <div className="p-10 space-y-6">
      <h1 className="text-3xl font-bold">–ü–∞–Ω–µ–ª—å –∫–∞—Å—Å–∏—Ä–∞</h1>

      <div className="flex gap-4">
        <button className="bg-green-500 px-4 py-2 text-white" onClick={handleStartShift}>
          –ù–∞—á–∞—Ç—å —Å–º–µ–Ω—É
        </button>
        <button className="bg-red-500 px-4 py-2 text-white" onClick={handleEndShift}>
          –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É
        </button>
      </div>

      <div className="space-y-2">
        <input
          type="number"
          placeholder="–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
          value={amount}
          onChange={(e) => setAmount(Number(e.target.value))}
          className="border p-2 w-full"
        />

        <select
          value={type}
          onChange={(e) => setType(e.target.value)}
          className="border p-2 w-full"
          aria-label="–¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
        >
          <option value="income">–î–æ—Ö–æ–¥</option>
          <option value="expense">–†–∞—Å—Ö–æ–¥</option>
        </select>

        <button className="bg-blue-500 px-4 py-2 text-white" onClick={handleCreateTransaction}>
          –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        </button>
      </div>

      <div className="space-y-2">
        <input
          type="number"
          placeholder="–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –≤ –∫–∞—Å—Å–µ"
          value={finalCash}
          onChange={(e) => setFinalCash(Number(e.target.value))}
          className="border p-2 w-full"
        />
      </div>

      <button
        className="underline text-blue-600"
        onClick={() => navigate("/report")}
      >
        –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ç—á–µ—Ç—É
      </button>
    </div>
  );
}
